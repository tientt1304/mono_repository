// Generated By XFlutter Cli.
//
// more info: https://xflutter-cli.com
import 'dart:async';
import 'package:dio/dio.dart';
import 'package:injectable/injectable.dart';
import 'authentication_repository.dart';
import 'package:core/core.dart';
import 'package:authentication/src/authentication/data/models/requests/login_request/login_request.dart';
import 'package:authentication/src/authentication/data/models/requests/verify_code_request/verify_code_request.dart';
import 'package:authentication/src/authentication/data/models/requests/get_verification_code_request/get_verification_code_request.dart';
import 'package:authentication/src/authentication/data/data_sources/remote/authentication/authentication_remote_data_source.dart';

@LazySingleton(scope: 'authentication', as: AuthenticationRepository)
class AuthenticationRepositoryImpl extends BaseRepository
    implements AuthenticationRepository {
  final AuthenticationRemoteDataSource _remoteDataSource;
  AuthenticationRepositoryImpl(this._remoteDataSource);

  @override
  Future<BaseResponse<dynamic>> login(LoginRequest data) async {
    return BaseResponse<dynamic>(success: true, message: 'success', data: null);

    // final cancelToken = CancelToken();
    // return getResponse(
    //   () => _remoteDataSource.login(
    //       data: data.toJson(), cancelToken: cancelToken),
    //   cancelToken: cancelToken,
    // );
  }

  @override
  Future<BaseResponse<dynamic>> verifyPinCode(VerifyCodeRequest data) {
    final cancelToken = CancelToken();
    return getResponse(
      () => _remoteDataSource.verifyPinCode(
          data: data.toJson(), cancelToken: cancelToken),
      cancelToken: cancelToken,
    );
  }

  @override
  Future<BaseResponse<dynamic>> resendVerificationCode(
      GetVerificationCodeRequest data) {
    final cancelToken = CancelToken();
    return getResponse(
      () => _remoteDataSource.resendVerificationCode(
          data: data.toJson(), cancelToken: cancelToken),
      cancelToken: cancelToken,
    );
  }
}
